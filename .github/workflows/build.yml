name: Build and push to PyPI
on:
  workflow_run:
    workflows: ["Release on push to main branch"]
    branches: [main]
    types:
      - completed

jobs:
  get-version:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.get-tag-name.outputs.tag_name }}
    steps:
      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "version_number"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/version_number.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip version_number.zip

      - name: Get tag name
        id: get-tag-name
        run: |
          echo "tag_name=$(cat version_number)" >> $GITHUB_OUTPUT

  publish-pypi:
    runs-on: ubuntu-latest
    needs: get-version
    if: needs.get-version.outputs.tag_name != ''
    steps:
      - uses: actions/checkout@v4
      - name: Build and publish to pypi
        uses: JRubics/poetry-publish@v1.17
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          ignore_dev_requirements: "yes"
